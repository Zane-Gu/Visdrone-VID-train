import os
import cv2

# Define your paths
dataset_path = "/content/drive/MyDrive/Final_Project/7.4-VisDrone2019-VID-train/VisDrone2019-VID-train"  # Change to your actual path
annotations_path = os.path.join(dataset_path, "annotations")
sequences_path = os.path.join(dataset_path, "sequences")
labels_path = os.path.join(dataset_path, "labels")

os.makedirs(labels_path, exist_ok=True)  # Create labels directory if it doesn't exist

# Iterate over annotation files
for filename in os.listdir(annotations_path):
    if filename.endswith(".txt"):
        seq_name = filename.split(".")[0]
        seq_path = os.path.join(sequences_path, seq_name)

        seq_labels_path = os.path.join(labels_path, seq_name)
        os.makedirs(seq_labels_path, exist_ok=True)  # Create sequence labels directory if it doesn't exist

        with open(os.path.join(annotations_path, filename), 'r') as file:
            annotations = file.readlines()

        # Create a dict to store the annotations of each frame
        frame_dict = {}
        for line in annotations:
            frame_idx, _, bbox_left, bbox_top, bbox_width, bbox_height, _, object_class, _, _ = map(int, line.split(','))

            # Ignore the annotation if it's an ignored region or if it's occluded
            if object_class == 0 or bbox_width == 0 or bbox_height == 0:
                continue

            # Calculate the center, width, and height of the bounding box relative to the image's dimensions
            x_center = (bbox_left + bbox_width / 2)
            y_center = (bbox_top + bbox_height / 2)
            rel_width = bbox_width
            rel_height = bbox_height

            if frame_idx not in frame_dict:
                frame_dict[frame_idx] = []

            # Append to the list of this frame's annotations
            frame_dict[frame_idx].append((object_class, x_center, y_center, rel_width, rel_height))

        # Write to the corresponding label file in the YOLO format
        for frame_idx, bbox_list in frame_dict.items():
            image_path = os.path.join(seq_path, f"{frame_idx:07d}.jpg")
            image = cv2.imread(image_path)
            im_height, im_width = image.shape[:2]
            label_path = os.path.join(seq_labels_path, f"{frame_idx:07d}.txt")

            with open(label_path, 'w') as file:
                for object_class, x_center, y_center, rel_width, rel_height in bbox_list:
                    file.write(f"{object_class-1} {x_center/im_width} {y_center/im_height} {rel_width/im_width} {rel_height/im_height}\n")
